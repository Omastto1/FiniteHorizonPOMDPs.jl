var documenterSearchIndex = {"docs":
[{"location":"interface/#Interface-Documentation","page":"Interface Documentation","title":"Interface Documentation","text":"","category":"section"},{"location":"interface/","page":"Interface Documentation","title":"Interface Documentation","text":"This page describes the finite horizon interface. In order to fully define one the user has to also use methods from POMDPs.jl interface defined here.","category":"page"},{"location":"interface/","page":"Interface Documentation","title":"Interface Documentation","text":"Docstrings for FiniteHorizonPOMDPs.jl interface members can be accessed through Julia's built-in documentation system or in the list below.","category":"page"},{"location":"interface/","page":"Interface Documentation","title":"Interface Documentation","text":"CurrentModule = FiniteHorizonPOMDPs","category":"page"},{"location":"interface/#Contents","page":"Interface Documentation","title":"Contents","text":"","category":"section"},{"location":"interface/","page":"Interface Documentation","title":"Interface Documentation","text":"Pages = [\"interface.md\"]","category":"page"},{"location":"interface/#Index","page":"Interface Documentation","title":"Index","text":"","category":"section"},{"location":"interface/","page":"Interface Documentation","title":"Interface Documentation","text":"Pages = [\"interface.md\"]","category":"page"},{"location":"interface/#Types","page":"Interface Documentation","title":"Types","text":"","category":"section"},{"location":"interface/","page":"Interface Documentation","title":"Interface Documentation","text":"FiniteHorizonPOMDPs.FiniteHorizon\nFiniteHorizonPOMDPs.HorizonLength\nFiniteHorizonPOMDPs.InfiniteHorizon","category":"page"},{"location":"interface/#FiniteHorizonPOMDPs.FiniteHorizon","page":"Interface Documentation","title":"FiniteHorizonPOMDPs.FiniteHorizon","text":"If HorizonLength(m::Union{MDP,POMDP}) == FiniteHorizon(), horizon(m) should be implemented and return an integer\n\n\n\n\n\n","category":"type"},{"location":"interface/#FiniteHorizonPOMDPs.HorizonLength","page":"Interface Documentation","title":"FiniteHorizonPOMDPs.HorizonLength","text":"HorizonLength(::Type{<:Union{POMDP,MDP})\nHorizonLength(::Union{POMDP,MDP})\n\nCheck whether MDP is Finite or Infinite Horizon and return corresponding struct (FiniteHorizon or InfiniteHorizon).\n\n\n\n\n\n","category":"type"},{"location":"interface/#FiniteHorizonPOMDPs.InfiniteHorizon","page":"Interface Documentation","title":"FiniteHorizonPOMDPs.InfiniteHorizon","text":"HorizonLength(m::Union{MDP,POMDP}) == InfiniteHorizon() indicates that horizon(m) should not be called.\n\n\n\n\n\n","category":"type"},{"location":"interface/#Model-Functions","page":"Interface Documentation","title":"Model Functions","text":"","category":"section"},{"location":"interface/","page":"Interface Documentation","title":"Interface Documentation","text":"FiniteHorizonPOMDPs.horizon\nFiniteHorizonPOMDPs.fixhorizon\nFiniteHorizonPOMDPs.stage\nFiniteHorizonPOMDPs.stage_stateindex\nFiniteHorizonPOMDPs.stage_states","category":"page"},{"location":"interface/#FiniteHorizonPOMDPs.horizon","page":"Interface Documentation","title":"FiniteHorizonPOMDPs.horizon","text":"Return the number of steps that will be taken in the (PO)MDP, given it is Finite Horizon.\n\nA simulation of a (PO)MDP with horizon(m) == d should contain d+1 states and d actions and rewards.\n\n\n\n\n\n","category":"function"},{"location":"interface/#FiniteHorizonPOMDPs.fixhorizon","page":"Interface Documentation","title":"FiniteHorizonPOMDPs.fixhorizon","text":"fixhorizon(m::Union{MDP,POMDP}, horizon::Int)\n\nWrap infinite horizon (PO)MDP m and horizon to the new structure creating Finite Horizon (PO)MDP.\n\n\n\n\n\n","category":"function"},{"location":"interface/#FiniteHorizonPOMDPs.stage","page":"Interface Documentation","title":"FiniteHorizonPOMDPs.stage","text":"stage(ss::MDPState)::Int\n\nReturn number of state's stage\n\n\n\n\n\n","category":"function"},{"location":"interface/#FiniteHorizonPOMDPs.stage_stateindex","page":"Interface Documentation","title":"FiniteHorizonPOMDPs.stage_stateindex","text":"stage_stateindex(m::Union{MDP,POMDP}, ss::MDPState}::Int\n\nCompute the index of the given state in Infinite Horizon for given stage state space.\n\n\n\n\n\n","category":"function"},{"location":"interface/#FiniteHorizonPOMDPs.stage_states","page":"Interface Documentation","title":"FiniteHorizonPOMDPs.stage_states","text":"stage_states(m::Union{MDP,POMDP}, stage::Int)\n\nCreate Infinite Horizon MDP's states for given stage.\n\n\n\n\n\n","category":"function"},{"location":"#FiniteHorizonPOMDPs.jl","page":"FiniteHorizonPOMDPs.jl","title":"FiniteHorizonPOMDPs.jl","text":"","category":"section"},{"location":"","page":"FiniteHorizonPOMDPs.jl","title":"FiniteHorizonPOMDPs.jl","text":"A Julia interface built on top of POMDPs.jl as extension for finite horizon POMDPs.","category":"page"},{"location":"#Package-Features","page":"FiniteHorizonPOMDPs.jl","title":"Package Features","text":"","category":"section"},{"location":"","page":"FiniteHorizonPOMDPs.jl","title":"FiniteHorizonPOMDPs.jl","text":"The goals of this package is to:","category":"page"},{"location":"","page":"FiniteHorizonPOMDPs.jl","title":"FiniteHorizonPOMDPs.jl","text":"offer value-iteration-based algorithms to start at the final-stage and work backwards,\npreserve compatibility with other interface extensions like constrained POMDPs and mixed observability problems,\noffer ways to create finite horizon POMDPs.","category":"page"},{"location":"","page":"FiniteHorizonPOMDPs.jl","title":"FiniteHorizonPOMDPs.jl","text":"Package supports two ways to do that.","category":"page"},{"location":"","page":"FiniteHorizonPOMDPs.jl","title":"FiniteHorizonPOMDPs.jl","text":"Custom finite horizon POMDPs implemented using package's interface methods.\nUtility which wraps infinite horizon POMDP into finite horizon one.","category":"page"},{"location":"","page":"FiniteHorizonPOMDPs.jl","title":"FiniteHorizonPOMDPs.jl","text":"This is achieved without defining any abstract class.","category":"page"},{"location":"#Solvers","page":"FiniteHorizonPOMDPs.jl","title":"Solvers","text":"","category":"section"},{"location":"","page":"FiniteHorizonPOMDPs.jl","title":"FiniteHorizonPOMDPs.jl","text":"The FiniteHorizonPOMDPS.jl contains:","category":"page"},{"location":"","page":"FiniteHorizonPOMDPs.jl","title":"FiniteHorizonPOMDPs.jl","text":"Finite horizon value iteration solver.","category":"page"},{"location":"","page":"FiniteHorizonPOMDPs.jl","title":"FiniteHorizonPOMDPs.jl","text":"This list is going to be extended with POMDPs solvers in future. Solvers may be also moved to separate repositories.","category":"page"},{"location":"#Interface","page":"FiniteHorizonPOMDPs.jl","title":"Interface","text":"","category":"section"},{"location":"","page":"FiniteHorizonPOMDPs.jl","title":"FiniteHorizonPOMDPs.jl","text":"Finite horizon POMDPs are to be defined using POMDPs.jl interface extended with new functions from this package","category":"page"},{"location":"","page":"FiniteHorizonPOMDPs.jl","title":"FiniteHorizonPOMDPs.jl","text":"FiniteHorizonPOMDPs' interface is documented in Interface Documentation section.","category":"page"}]
}
